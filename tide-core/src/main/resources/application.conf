
akka {
  extensions = ["com.romix.akka.serialization.kryo.KryoSerializationExtension$"]
  actor {
    provider = "akka.cluster.ClusterActorRefProvider"

    serializers {
      kryo = "com.romix.akka.serialization.kryo.KryoSerializer"
    }

    serialization-bindings {
      "com.netflix.spinnaker.tide.actor.MessageProtocol" = kryo
      "com.netflix.spinnaker.tide.model.AkkaClustered" = kryo
      "com.netflix.spinnaker.tide.model.ResourceEvent" = kryo
      "com.netflix.spinnaker.tide.model.AwsProtocol" = kryo
      "com.netflix.spinnaker.tide.actor.copy.PipelineDeepCopyProtocol" = kryo
      "com.netflix.spinnaker.tide.actor.copy.ServerGroupDeepCopyProtocol" = kryo
      "com.netflix.spinnaker.tide.actor.copy.DependencyCopyProtocol" = kryo
      "com.netflix.spinnaker.tide.actor.task.TaskDirectorProtocol" = kryo
      "com.netflix.spinnaker.tide.actor.task.TaskProtocol" = kryo
      "com.netflix.spinnaker.tide.actor.polling.PollingProtocol" = kryo
      "com.netflix.spinnaker.tide.actor.service.CloudDriverProtocol" = kryo
      "com.netflix.spinnaker.tide.actor.service.Front50Protocol" = kryo
      "com.netflix.spinnaker.tide.actor.comparison.AttributeDiffProtocol" = kryo
      "com.netflix.spinnaker.tide.actor.classiclink.ClassicLinkInstanceProtocol" = kryo
      "com.netflix.spinnaker.tide.actor.classiclink.AttachClassicLinkProtocol" = kryo
    }

    kryo  {
      kryo-custom-serializer-init = "com.netflix.spinnaker.tide.config.KryoInit"
      type = "graph"
      idstrategy = "default"
      serializer-pool-size = 16
      buffer-size = 4096
      max-buffer-size = -1
      use-manifests = false
      implicit-registration-logging = false
      kryo-trace = false
    }

  }

  remote {
    log-remote-lifecycle-events = off
    netty.tcp {
      hostname = "127.0.0.1"
      port = 0
    }
    log-received-messages = on
    log-sent-messages = on
    transport-failure-detector {
      heartbeat-interval = 8s   # default 4s
      acceptable-heartbeat-pause = 12s  # default 10s
    }
  }
  cluster {
    auto-down-unreachable-after = 10s
    retry-unsuccessful-join-after = off
  }

  persistence {
    journal.plugin = "akka-persistence-redis.journal"
    snapshot-store.plugin = "akka-persistence-redis.snapshot"
  }
}
