/*
 * Copyright 2015 Netflix, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
  ext {
    springBootVersion = "1.2.5.RELEASE"
  }
  repositories {
    jcenter()
    maven { url "http://spinnaker.bintray.com/gradle" }
    maven { url "http://dl.bintray.com/ssongvan/maven" }
  }
  dependencies {
    classpath "com.netflix.spinnaker.gradle:spinnaker-gradle-project:3.1.0"
    classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
  }
}

tasks.withType(ScalaCompile) {
  scalaCompileOptions.useAnt = false
}

allprojects {
  apply plugin: "spinnaker.project"
  apply plugin: "scala"

  group = "com.netflix.spinnaker.tide"

  sourceCompatibility = "1.8"
  targetCompatibility = "1.8"

  configurations {
    all {
      exclude group: 'javax.servlet', module: 'servlet-api'
      resolutionStrategy {
        force 'org.antlr:antlr-runtime:3.5.2'
        force 'com.amazonaws:aws-java-sdk-core:1.10.5.1'
        force 'com.fasterxml:classmate:1.2.0'
        eachDependency {
          if (it.requested.group == 'asm' || it.requested.group == 'org.ow2.asm') {
            it.useTarget group: 'org.ow2.asm', name: 'asm-all', version: '5.0.3'
          }
          if (it.requested.group == 'junit') {
            it.useTarget group: 'junit', name: 'junit', version: '4.12'
          }
          if (it.requested.group == 'cglib' || it.requested.name == 'cglib') {
            it.useTarget group: 'cglib', name: 'cglib', version: '3.1'
          }
          if (it.requested.group == 'com.google.guava') {
            it.useTarget group: 'com.google.guava', name: 'guava', version: '18.0'
          }
          if (it.requested.group == 'antlr') {
            it.useTarget group: 'org.antlr', name: it.requested.name, version: '3.5.2'
          }
          if (it.requested.group == 'org.apache.xbean') {
            it.useVersion '4.3'
          }
        }
      }
    }
  }

  ext {
    versions = [
      scala  : "2.11",
      akka   : "2.3.12",
      scalaTest: "2.2.4"
    ]
  }

  dependencies {
    compile "org.scala-lang:scala-library:$versions.scala.6"
    compile "com.typesafe.akka:akka-actor_$versions.scala:$versions.akka"
    compile "com.typesafe.akka:akka-persistence-experimental_$versions.scala:$versions.akka"
    compile "com.typesafe.akka:akka-cluster_$versions.scala:$versions.akka"
    compile "com.typesafe.akka:akka-contrib_$versions.scala:$versions.akka"
    compile "com.fasterxml.jackson.module:jackson-module-scala_$versions.scala:2.5.2"
    compile "com.squareup.okhttp:okhttp:2.4.0"
    compile 'com.netflix.frigga:frigga:0.13'
    compile "com.github.romix.akka:akka-kryo-serialization_$versions.scala:0.3.3"
    compile "com.hootsuite:akka-persistence-redis_$versions.scala:0.2.0"

    testCompile "org.scala-lang.modules:scala-xml_$versions.scala:1.0.1"
    testCompile "org.scalatest:scalatest_$versions.scala:$versions.scalaTest"
    testCompile "com.typesafe.akka:akka-actor-tests_$versions.scala:$versions.akka"
    testCompile "org.scalamock:scalamock-scalatest-support_$versions.scala:3.2"
  }
}

defaultTasks ':tide-web:bootRun'
